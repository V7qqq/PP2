#–∏–º–ø–æ—Ä—Ç–∏—Ä—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —á—Ç–æ –±—ã —è –º–æ–≥ –Ω–∞–ø–∏—Å–∞—Ç—å –∑–º–µ–π–∫—É
import pygame # —Å–∞–º –ø–∞–π–≥–µ–π–º
import sys # –¥–ª—è –≤—ã—Ö–æ–¥–∞ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import random # —Ä–∞–Ω–¥–æ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∞

pygame.init() # –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é –º–µ—Ç–æ–¥—ã —Å –ø–∞–π–≥–µ–π–º —á—Ç–æ –±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏–º–∏

WIDTH, HEIGHT = 1000, 1000 #–®–∏—Ä–∏–Ω–∞ –∏ –í—ã—Å–æ—Ç–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
CELL_SIZE = 20 # –¥–µ–ª–∏–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–µ—Ç–æ—á–µ–∫ 50x50 (1000/20 = 50)
GRID_WIDTH = WIDTH // CELL_SIZE #–∫–ª–µ—Ç–∫–∞ 50
GRID_HEIGHT = HEIGHT // CELL_SIZE #–∫–ª–µ—Ç–∫–∞ 50

screen = pygame.display.set_mode((WIDTH, HEIGHT)) #—ç–∫—Ä–∞–Ω 1000 –Ω–∞ 1000
clock = pygame.time.Clock() #–ø–æ–¥—Å—á–µ—Ç —Ñ—Ä–µ–π–º–∞
pygame.display.set_caption("Snakeeey üêç") # –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

#–¶–≤–µ—Ç–∞
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GREEN = (0, 200, 0)
RED = (255, 0, 0)

snake = [(10, 10), (20,20)]  #—Å—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–º–µ–π–∫–∏ –≤ –∫–ª–µ—Ç–∫–∞—Ö (–∑–º–µ–π–∫–∞ c –¥–≤—É–º—è —á–∞—Å—Ç—è–º–∏)
direction = (1, 0)  #–∏–¥—ë—Ç –≤–ø—Ä–∞–≤–æ
Speed = 10 #—Å–∫–æ—Ä–æ—Å—Ç—å
level_counter = 1 #–æ—Ç–æ–±—Ä–∞–∂–∞–ª–∫–∞ –ª–µ–≤–µ–ª–∞
level_ready = 0 # –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ª–µ–≤–µ–ª–∞ —Å–º–µ–Ω—ã (4 –ª–µ–≤–µ–ª_—Ä–µ–¥–∏ = +1 –ª–µ–≤–µ–ª –∫–∞—É–Ω—Ç–µ—Ä)
score_counter = 0 #–ø–æ–¥—Å—á–µ—Ç –æ—á–∫–æ–≤


apple = (random.randint(0, GRID_WIDTH - 1), random.randint(0, GRID_HEIGHT - 1)) #–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —è–±–ª–æ–∫–∞ (—Ä–∞–Ω–¥–æ–º–Ω—ã–µ)


while True:
    screen.fill(WHITE) #—ç–∫—Ä–∞–Ω –±–µ–ª—ã–π

    #—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∏–≥—Ä—ã
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

        # —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–µ–ª–∫–∞–º–∏
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP and direction != (0, 1): #–Ω–µ –¥–∞–µ—Ç –∑–º–µ–π–∫–∏ —É–π—Ç–∏ (–≤ —Å–µ–±—è (–∫–æ–≥–¥–∞ –æ–Ω–∞ –∏–¥–µ—Ç –≤–≤–µ—Ä—Ö, –æ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–π—Ç–∏ —Ä–µ–∑–∫–æ –≤–Ω–∏–∑))
                direction = (0, -1)
            elif event.key == pygame.K_DOWN and direction != (0, -1): #–≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ø–æ —Ç–æ–π –∂–µ –ª–æ–≥–∏–∫–µ
                direction = (0, 1)
            elif event.key == pygame.K_LEFT and direction != (1, 0):
                direction = (-1, 0)
            elif event.key == pygame.K_RIGHT and direction != (-1, 0):
                direction = (1, 0)

   
    head_x, head_y = snake[0] # –±–µ—Ä—ë–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≥–æ–ª–æ–≤—ã
    dx, dy = direction # –±–µ—Ä—ë–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    new_head = (head_x + dx, head_y + dy) #—Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—É—é –≥–æ–ª–æ–≤—É
    snake.insert(0, new_head) #–≤—Å—Ç–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞

    if new_head == apple: #–µ—Å–ª–∏ —è–±–ª–æ–∫–æ —Å—ä–µ–¥–µ–Ω–æ
        while True: # –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —è–±–ª–æ–∫–æ –Ω–µ —Å–ø–∞–≤–Ω–∏—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –∑–º–µ–π–∫–∏
            apple = (random.randint(0, GRID_WIDTH - 1), random.randint(0, GRID_HEIGHT - 1))
            if apple not in snake:
                break
        level_ready +=1 #+1 –¥–æ 4
        score_counter +=1 # +1 –∫ 000
    else:
        snake.pop()  # #–ª–∏–±–æ —É–¥–∞–ª—è–µ–º —Ö–≤–æ—Å—Ç

    if level_ready == 4: #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—ã—à–µ–Ω–∏—è –ª–µ–≤–µ–ª–∞
        level_ready = 0 #—Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
        level_counter +=1 #–ø–æ–≤—ã—à–∞–µ–º –ª–≤–ª
        Speed += 5 #–ø–æ–≤—ã—à–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –∑–º–µ–π–∫–∏
        pygame.display.update()

    if (new_head in snake[1:] or  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–∞–º–æ—Å—ä–µ–¥–∞–Ω–∏–µ
        new_head[0] < 0 or new_head[0] >= GRID_WIDTH or 
        new_head[1] < 0 or new_head[1] >= GRID_HEIGHT):

        screen.blit(text_1, (WIDTH// 2 - text_1.get_width() // 2, HEIGHT //2)) #game over –Ω–∞–¥–ø–∏—Å—å

        pygame.display.update()

        pygame.time.delay(3000) 
        pygame.quit()
        sys.exit()


    for block in snake:
        x, y = block
        pygame.draw.rect(screen, GREEN, (x * CELL_SIZE, y * CELL_SIZE, CELL_SIZE, CELL_SIZE)) #—Ä–∏—Å—É–µ–º –∑–º–µ–π–∫—É —á–µ—Ä–µ–∑ —Ü–∏–∫–ª –∫–æ—Ç–æ—Ä—ã–π –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ—Ç x,y —Å –±–ª–æ–∫–æ–≤ (–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç : [(x1 –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞,y1 –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞), (–∏ —Ç–∞–∫ –¥–∞–ª–µ–µ)])

        pygame.draw.rect(screen, RED, (apple[0] * CELL_SIZE, apple[1] * CELL_SIZE, CELL_SIZE, CELL_SIZE)) #–æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —è–±–ª–æ—á–∫–æ

        
    
    #—Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–æ–≤ –∏ –∏—Ö —Å—Ç–∏–ª—å (—É –Ω–∞—Å none - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)
    font_title_1 = pygame.font.Font(None, 100)
    font_title_2 = pygame.font.Font(None, 40)
    font_title_3 = pygame.font.Font(None, 60)

    text_1 = font_title_1.render(f"GAME OVER!", True, RED) #—Ç–µ–∫—Å—Ç –≥–µ–π–º –æ–≤–µ—Ä
    text_2 = font_title_2.render(f"Score: {score_counter:03}", True, (0,0,0)) #—Ç–µ–∫—Å—Ç score_counter (–æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥ 000)
    text_3 = font_title_3.render(f"level : {level_counter}", True, (0,0,0)) # —Ç–µ–∫—Å—Ç level_counter

    screen.blit(text_3, (WIDTH // 2 -  text_3.get_width() // 2, 50)) #–ª–µ–≤–µ–ª –∫–∞—É–Ω—Ç–µ—Ä –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ

    screen.blit(text_2, (30,60)) #—Å–∫–æ—Ä –∫–∞—É–Ω—Ç–µ—Ä –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    

    pygame.display.update()
    clock.tick(Speed)  #—Å–∫–æ—Ä–æ—Å—Ç—å –∑–º–µ–π–∫–∏ —Ä–µ–≥—É–ª–∏—Ä—É—è —Ñ—Ä–µ–π–º—ã (—á–µ–º –±–æ–ª—å—à–µ –∫–∞–¥—Ä–æ–≤ - —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ –∑–º–µ–π–∫–∞ –¥–≤–∏–≥–∞–µ—Ç—Å—è. –ü–æ—Ç–æ–º—É —á—Ç–æ –∑–∞ 1 —Å–µ–∫—É–Ω–¥—É –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –±–æ–ª—å—à–µ —Ñ—Ä–µ–π–º–æ–≤)
