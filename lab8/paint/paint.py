import pygame
import sys

pygame.init()

#–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–∫—Ä–∞–Ω–∞
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("PyPaint üé®")
clock = pygame.time.Clock()

# —Ü–≤–µ—Ç–∞
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
current_color = BLACK

# –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
radius = 5
mode = 'draw'  # draw, rect, circle, erase
start_pos = None
last_pos = None

#—Ñ–æ–Ω –±–µ–ª—ã–π 
screen.fill(WHITE)

def drawLineBetween(surface, start, end, width, color): #—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –ª–∏–Ω–∏–π, –ª–∏–Ω–µ–π–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è
    #–Ω–∞—Å–∫–æ–ª—å–∫–æ –¥–∞–ª–µ–∫–æ –ø–æ X –∏ Y —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã —ç—Ç–∏ –¥–≤–µ —Ç–æ—á–∫–∏.
    dx = start[0] - end[0]
    dy = start[1] - end[1]
    iterations = max(abs(dx), abs(dy)) #—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å –ª–∏–Ω–∏—é. –ß–µ–º –¥–∞–ª—å—à–µ —Ç–æ—á–∫–∏, —Ç–µ–º –±–æ–ª—å—à–µ —à–∞–≥–æ–≤ —á—Ç–æ –±—ã –ª–∏–Ω–∏—è –±—ã–ª–∞ –ø–∞–ª–≤–Ω–æ–π
    for i in range(iterations):
        progress = i / iterations #–ø—Ä–æ—Ü–µ–Ω—Ç –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏
        x = int(start[0] * (1 - progress) + end[0] * progress)
        y = int(start[1] * (1 - progress) + end[1] * progress)
        pygame.draw.circle(surface, color, (x, y), width)

# —Ü–∏–∫–ª
running = True
while running:
    #–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª–∞
    pressed = pygame.key.get_pressed()
    ctrl = pressed[pygame.K_LCTRL] or pressed[pygame.K_RCTRL]
    #–≤—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        #–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_ESCAPE:
                running = False
            elif event.key == pygame.K_z:
                current_color = (255, 0, 0) #–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–≤–µ—Ç–æ–≤
            elif event.key == pygame.K_x:
                current_color = (0, 255, 0)
            elif event.key == pygame.K_c:
                current_color = (0, 0, 255)
            elif event.key == pygame.K_b:
                current_color = BLACK
            elif event.key == pygame.K_n:
                current_color = WHITE
            elif event.key == pygame.K_1: #—Å–º–µ–Ω–∞ –º–æ–¥–æ–≤
                mode = 'draw'
            elif event.key == pygame.K_3:
                mode = 'circle'
            elif event.key == pygame.K_2:
                mode = 'erase'
            elif event.key == pygame.K_4:
                mode = 'rect'

        if event.type == pygame.MOUSEBUTTONDOWN: #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–∂–∏—Ç–∏—è –º—ã—à–∏
            if event.button == 1: #–ª–∫–º
                start_pos = event.pos #—Å—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é
                if mode in ['circle', 'rect']:
                    temp_surface = screen.copy() #–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ (—á—Ç–æ –±—ã —Ñ–∏–≥—É—Ä—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª–∏—Å—å –∞ –ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–∏—Å—å)

        if event.type == pygame.MOUSEBUTTONUP:
            if event.button == 1 and start_pos:
                end_pos = event.pos
                if mode == 'circle': 
                    center = ((start_pos[0] + end_pos[0]) // 2, (start_pos[1] + end_pos[1]) // 2)
                    radius_circle = int(((end_pos[0] - start_pos[0]) ** 2 + (end_pos[1] - start_pos[1]) ** 2) ** 0.5 / 2)
                    pygame.draw.circle(screen, current_color, center, radius_circle, 2)
                elif mode == 'rect':
                    rect = pygame.Rect(start_pos, (end_pos[0] - start_pos[0], end_pos[1] - start_pos[1]))
                    pygame.draw.rect(screen, current_color, rect, 2)
                start_pos = None

        if event.type == pygame.MOUSEMOTION:
            if event.buttons[0] and mode in ['draw', 'erase']:
                if last_pos:
                    drawLineBetween(screen, last_pos, event.pos, radius, WHITE if mode == 'erase' else current_color)
                last_pos = event.pos
            else:
                last_pos = None

            if event.buttons[0] and mode in ['circle', 'rect'] and start_pos:
                screen.blit(temp_surface, (0, 0)) #–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–∏–≥—É—Ä—ã
                end_pos = event.pos
                if mode == 'circle':
                    center = ((start_pos[0] + end_pos[0]) // 2, (start_pos[1] + end_pos[1]) // 2)
                    radius_circle = int(((end_pos[0] - start_pos[0]) ** 2 + (end_pos[1] - start_pos[1]) ** 2) ** 0.5 / 2)
                    pygame.draw.circle(screen, current_color, center, radius_circle, 2)
                elif mode == 'rect':
                    rect = pygame.Rect(start_pos, (end_pos[0] - start_pos[0], end_pos[1] - start_pos[1]))
                    pygame.draw.rect(screen, current_color, rect, 2)

    pygame.display.flip() #–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞
    clock.tick(60) #60 —Ñ–ø—Å

pygame.quit()
sys.exit()
